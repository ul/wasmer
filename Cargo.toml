[package]
name = "wasmer-workspace"
version = "1.0.0-beta1"
description = "Wasmer workspace"
authors = ["Wasmer Engineering Team <engineering@wasmer.io>"]
repository = "https://github.com/wasmerio/wasmer"
license = "MIT"
edition = "2018"
publish = false
autoexamples = false

[dependencies]
wasmer = { version = "1.0.0-beta1", path = "lib/api", default-features = false }
wasmer-compiler = { version = "1.0.0-beta1", path = "lib/compiler" }
wasmer-compiler-cranelift = { version = "1.0.0-beta1", path = "lib/compiler-cranelift", optional = true }
wasmer-compiler-singlepass = { version = "1.0.0-beta1", path = "lib/compiler-singlepass", optional = true }
wasmer-compiler-llvm = { version = "1.0.0-beta1", path = "lib/compiler-llvm", optional = true }
wasmer-emscripten = { version = "1.0.0-beta1", path = "lib/emscripten", optional = true }
wasmer-engine = { version = "1.0.0-beta1", path = "lib/engine" }
wasmer-engine-jit = { version = "1.0.0-beta1", path = "lib/engine-jit", optional = true }
wasmer-engine-native = { version = "1.0.0-beta1", path = "lib/engine-native", optional = true }
wasmer-engine-object-file = { version = "1.0.0-beta1", path = "lib/engine-object-file", optional = true }
wasmer-wasi = { version = "1.0.0-beta1", path = "lib/wasi", optional = true }
wasmer-wast = { version = "1.0.0-beta1", path = "tests/lib/wast", optional = true }
wasmer-cache = { version = "1.0.0-beta1", path = "lib/cache", optional = true }
wasmer-types = { version = "1.0.0-beta1", path = "lib/wasmer-types" }
wasmer-middlewares = { version = "1.0.0-beta1", path = "lib/middlewares", optional = true }
cfg-if = "1.0"

[workspace]
members = [
    "lib/api",
    "lib/cache",
    "lib/c-api",
    "lib/cli",
    "lib/compiler",
    "lib/compiler-cranelift",
    "lib/compiler-singlepass",
    "lib/compiler-llvm",
    "lib/derive",
    "lib/emscripten",
    "lib/engine",
    "lib/engine-jit",
    "lib/engine-native",
    "lib/engine-object-file",
    "lib/object",
    "lib/vm",
    "lib/wasi",
    "lib/wasi-experimental-io-devices",
    "lib/wasmer-types",
    "tests/lib/wast",
    "tests/integration/cli",
]
exclude = [
    "lib/deprecated",
]

[build-dependencies]
test-generator = { path = "tests/lib/test-generator" }
build-deps = "0.1.4"
anyhow = "1.0"
glob = "0.3"
rustc_version = "0.3"

[dev-dependencies]
anyhow = "1.0"
blake3 = "0.3"
criterion = "0.3"
lazy_static = "1.4"
wasmer-engine-dummy = { path = "tests/lib/engine-dummy" }
tempfile = "3.1"

[features]
# Don't add the compiler features in default, please add them on the Makefile
# since we might want to autoconfigure them depending on the availability on the host.
default = [
    "wat",
    "wast",
    "jit",
    "native",
    "object-file",
    "cache",
    "wasi",
    "emscripten",
    "middlewares",
]
engine = []
jit = [
    "wasmer-engine-jit",
    "engine",
]
native = [
    "wasmer-engine-native",
    "engine",
]
object-file = [
    "wasmer-engine-object-file",
    "engine",
]
cache = ["wasmer-cache"]
wast = ["wasmer-wast"]
wasi = ["wasmer-wasi"]
emscripten = ["wasmer-emscripten"]
wat = ["wasmer/wat"]
compiler = [
    "wasmer/compiler",
    "wasmer-compiler/translator",
    "wasmer-engine-jit/compiler",
    "wasmer-engine-native/compiler",
    "wasmer-engine-object-file/compiler",
]
singlepass = [
    "wasmer-compiler-singlepass",
    "compiler",
]
cranelift = [
    "wasmer-compiler-cranelift",
    "compiler",
]
llvm = [
    "wasmer-compiler-llvm",
    "compiler",
]
middlewares = ["wasmer-middlewares"]

# Testing features
test-singlepass = [
    "singlepass",
]
test-cranelift = [
    "cranelift",
]
test-llvm = [
    "llvm",
]

test-native = [
    "native",
    "test-generator/test-native",
]
test-jit = [
    "jit",
    "test-generator/test-jit",
]

# Specifies that we're running in coverage testing mode. This disables tests
# that raise signals because that interferes with tarpaulin.
coverage = []

[[bench]]
name = "static_and_dynamic_functions"
harness = false

[[example]]
name = "early-exit"
path = "examples/early_exit.rs"
required-features = ["cranelift"]

[[example]]
name = "engine-jit"
path = "examples/engine_jit.rs"
required-features = ["cranelift"]

[[example]]
name = "engine-native"
path = "examples/engine_native.rs"
required-features = ["cranelift"]

[[example]]
name = "engine-headless"
path = "examples/engine_headless.rs"
required-features = ["cranelift"]

[[example]]
name = "cross-compilation"
path = "examples/engine_cross_compilation.rs"
required-features = ["cranelift"]

[[example]]
name = "compiler-singlepass"
path = "examples/compiler_singlepass.rs"
required-features = ["singlepass"]

[[example]]
name = "compiler-cranelift"
path = "examples/compiler_cranelift.rs"
required-features = ["cranelift"]

[[example]]
name = "compiler-llvm"
path = "examples/compiler_llvm.rs"
required-features = ["llvm"]

[[example]]
name = "exported-function"
path = "examples/exports_function.rs"
required-features = ["cranelift"]

[[example]]
name = "exported-global"
path = "examples/exports_global.rs"
required-features = ["cranelift"]

[[example]]
name = "exported-memory"
path = "examples/exports_memory.rs"
required-features = ["cranelift"]

[[example]]
name = "imported-function"
path = "examples/imports_function.rs"
required-features = ["cranelift"]

[[example]]
name = "imported-global"
path = "examples/imports_global.rs"
required-features = ["cranelift"]

[[example]]
name = "tunables-limit-memory"
path = "examples/tunables_limit_memory.rs"
required-features = ["cranelift"]

[[example]]
name = "wasi"
path = "examples/wasi.rs"
required-features = ["cranelift", "wasi"]

[[example]]
name = "wasi-pipes"
path = "examples/wasi_pipes.rs"
required-features = ["cranelift", "wasi"]

[[example]]
name = "table"
path = "examples/table.rs"
required-features = ["cranelift"]

[[example]]
name = "memory"
path = "examples/memory.rs"
required-features = ["cranelift"]

[[example]]
name = "instance"
path = "examples/instance.rs"
required-features = ["cranelift"]

[[example]]
name = "errors"
path = "examples/errors.rs"
required-features = ["cranelift"]

[[example]]
name = "imported-function-env"
path = "examples/imports_function_env.rs"
required-features = ["cranelift"]

[[example]]
name = "hello-world"
path = "examples/hello_world.rs"
required-features = ["cranelift"]

[[example]]
name = "metering"
path = "examples/metering.rs"
required-features = ["cranelift"]

[[example]]
name = "imports-exports"
path = "examples/imports_exports.rs"
required-features = ["cranelift"]
